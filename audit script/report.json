{
  "metadata": {
    "timestamp": "2025-08-27T08:42:25.229Z",
    "version": "1.0.0",
    "tool": "Next.js + MUI Audit Toolkit"
  },
  "summary": {
    "overallScore": 72,
    "letterGrade": "C",
    "totalFiles": 27,
    "totalIssues": 510,
    "criticalIssues": 160,
    "categoryScores": {
      "nextjs": 68,
      "mui": 41,
      "accessibility": 68,
      "responsive": 85,
      "performance": 78,
      "security": 70,
      "quality": 29,
      "pwa": 88
    }
  },
  "issues": {
    "byCategory": {
      "quality": {
        "total": 246,
        "bySeverity": {
          "error": 2,
          "warning": 244,
          "info": 0
        },
        "fileCount": 22
      },
      "pwa": {
        "total": 7,
        "bySeverity": {
          "error": 5,
          "warning": 2,
          "info": 0
        },
        "fileCount": 3
      },
      "performance": {
        "total": 30,
        "bySeverity": {
          "error": 9,
          "warning": 21,
          "info": 0
        },
        "fileCount": 8
      },
      "security": {
        "total": 15,
        "bySeverity": {
          "error": 13,
          "warning": 0,
          "info": 2
        },
        "fileCount": 5
      },
      "accessibility": {
        "total": 28,
        "bySeverity": {
          "error": 19,
          "warning": 9,
          "info": 0
        },
        "fileCount": 6
      },
      "nextjs": {
        "total": 87,
        "bySeverity": {
          "error": 80,
          "warning": 7,
          "info": 0
        },
        "fileCount": 10
      },
      "mui": {
        "total": 70,
        "bySeverity": {
          "error": 19,
          "warning": 51,
          "info": 0
        },
        "fileCount": 9
      },
      "image": {
        "total": 11,
        "bySeverity": {
          "error": 10,
          "warning": 1,
          "info": 0
        },
        "fileCount": 2
      },
      "i18n": {
        "total": 4,
        "bySeverity": {
          "error": 0,
          "warning": 2,
          "info": 2
        },
        "fileCount": 2
      },
      "responsive": {
        "total": 3,
        "bySeverity": {
          "error": 1,
          "warning": 2,
          "info": 0
        },
        "fileCount": 2
      },
      "seo": {
        "total": 8,
        "bySeverity": {
          "error": 1,
          "warning": 7,
          "info": 0
        },
        "fileCount": 1
      },
      "structure": {
        "total": 1,
        "bySeverity": {
          "error": 1,
          "warning": 0,
          "info": 0
        },
        "fileCount": 1
      }
    },
    "bySeverity": {
      "error": 160,
      "warning": 346,
      "info": 4
    },
    "topIssues": [
      {
        "count": 72,
        "rule": "nextjs/ssr-hydration-sanity",
        "category": "nextjs",
        "severity": "error",
        "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components"
      },
      {
        "count": 13,
        "rule": "mui/import-guards",
        "category": "mui",
        "severity": "error",
        "message": "Import guards to prevent bundle bloat - use named imports only"
      },
      {
        "count": 9,
        "rule": "perf/rsc-boundaries",
        "category": "performance",
        "severity": "error",
        "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort)."
      },
      {
        "count": 8,
        "rule": "a11y/keyboard-interaction",
        "category": "accessibility",
        "severity": "error",
        "message": "Interactive elements must be keyboard accessible"
      },
      {
        "count": 7,
        "rule": "next/image-usage",
        "category": "nextjs",
        "severity": "error",
        "message": "Use Next.js Image component instead of img tag"
      },
      {
        "count": 7,
        "rule": "image/next-image",
        "category": "image",
        "severity": "error",
        "message": "Use Next.js Image component instead of img tag"
      },
      {
        "count": 6,
        "rule": "a11y/missing-alt",
        "category": "accessibility",
        "severity": "error",
        "message": "Image missing alt attribute"
      },
      {
        "count": 4,
        "rule": "pwa/head-tags",
        "category": "pwa",
        "severity": "error",
        "message": "Missing theme-color meta tag"
      },
      {
        "count": 3,
        "rule": "security/unsafe-eval",
        "category": "security",
        "severity": "error",
        "message": "Unsafe eval() usage detected"
      },
      {
        "count": 3,
        "rule": "security/dangerous-html",
        "category": "security",
        "severity": "error",
        "message": "dangerouslySetInnerHTML usage detected"
      },
      {
        "count": 3,
        "rule": "image/missing-alt",
        "category": "image",
        "severity": "error",
        "message": "Image missing alt attribute"
      },
      {
        "count": 3,
        "rule": "security/xss-vulnerability",
        "category": "security",
        "severity": "error",
        "message": "Potential XSS vulnerability detected"
      },
      {
        "count": 3,
        "rule": "a11y/image-alt-required",
        "category": "accessibility",
        "severity": "error",
        "message": "All images must have alt attributes for accessibility compliance"
      },
      {
        "count": 3,
        "rule": "mui/ssr-setup",
        "category": "mui",
        "severity": "error",
        "message": "MUI Emotion SSR not configured"
      },
      {
        "count": 2,
        "rule": "pwa/mixed-content",
        "category": "pwa",
        "severity": "error",
        "message": "Mixed content detected - PWA requires HTTPS"
      },
      {
        "count": 2,
        "rule": "typescript/any-usage",
        "category": "quality",
        "severity": "error",
        "message": "Avoid using \"any\" type - use proper typing"
      },
      {
        "count": 2,
        "rule": "security/sql-injection",
        "category": "security",
        "severity": "error",
        "message": "Potential SQL injection vulnerability"
      },
      {
        "count": 2,
        "rule": "mui/deprecated-apis",
        "category": "mui",
        "severity": "error",
        "message": "Deprecated MUI v4 styling API detected"
      },
      {
        "count": 2,
        "rule": "a11y/blank-target-security",
        "category": "accessibility",
        "severity": "error",
        "message": "target=\"_blank\" without rel=\"noopener\" is a security vulnerability"
      },
      {
        "count": 2,
        "rule": "mui/font-strategy",
        "category": "mui",
        "severity": "error",
        "message": "Google Fonts blocking CSS without preload"
      }
    ],
    "eslint": {
      "files": {},
      "summary": {
        "totalFiles": 0,
        "totalIssues": 0,
        "issuesBySeverity": {
          "error": 0,
          "warning": 0,
          "info": 0
        },
        "issuesByRule": {}
      }
    }
  },
  "files": {
    "test-audit.js": {
      "path": "test-audit.js",
      "issues": [
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 7,
          "column": 1,
          "excerpt": "console.log('üß™ Testing Next.js + MUI Audit Toolkit\\n');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:7:1"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 13,
          "column": 3,
          "excerpt": "console.log('üßπ Cleaned up previous audit results');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:13:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 17,
          "column": 3,
          "excerpt": "console.log('üîç Running audit on sample project...\\n');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:17:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 25,
          "column": 3,
          "excerpt": "console.log('\\n‚úÖ Audit completed successfully!');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:25:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 29,
          "column": 5,
          "excerpt": "console.log('üìä Reports generated successfully:');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:29:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 30,
          "column": 5,
          "excerpt": "console.log('   - audit/report.json (machine-readable)');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:30:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 31,
          "column": 5,
          "excerpt": "console.log('   - audit/REPORT.md (human-readable)');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:31:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 35,
          "column": 5,
          "excerpt": "console.log(`\\nüìà Audit Summary:`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:35:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 36,
          "column": 5,
          "excerpt": "console.log(`   Overall Score: ${report.summary.overallScore}/100 (${report.summary.letterGrade})`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:36:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 37,
          "column": 5,
          "excerpt": "console.log(`   Total Issues: ${report.summary.totalIssues}`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:37:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 38,
          "column": 5,
          "excerpt": "console.log(`   Critical Issues: ${report.summary.criticalIssues}`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:38:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 42,
          "column": 7,
          "excerpt": "console.log('\\nüö® Top Issues Found:');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:42:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 44,
          "column": 9,
          "excerpt": "console.log(`   ${index + 1}. ${issue.message} (${issue.count} occurrences)`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:44:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 48,
          "column": 5,
          "excerpt": "console.log('\\nüéØ Next Steps:');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:48:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 49,
          "column": 5,
          "excerpt": "console.log('   1. Review the detailed report in audit/REPORT.md');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:49:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 50,
          "column": 5,
          "excerpt": "console.log('   2. Fix critical issues first (they block deployment)');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:50:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 51,
          "column": 5,
          "excerpt": "console.log('   3. Address warnings and info items');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:51:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 52,
          "column": 5,
          "excerpt": "console.log('   4. Re-run audit to verify improvements');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:52:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 55,
          "column": 5,
          "excerpt": "console.log('‚ùå Reports not generated');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:55:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 59,
          "column": 3,
          "excerpt": "console.error('‚ùå Test failed:', error.message);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:59:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 63,
          "column": 1,
          "excerpt": "console.log('\\nüéâ Test completed! Check the audit/ directory for results.');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "test-audit.js",
          "exactLocation": "test-audit.js:63:1"
        }
      ],
      "score": 0
    },
    "playwright.config.ts": {
      "path": "playwright.config.ts",
      "issues": [
        {
          "rule": "pwa/mixed-content",
          "category": "pwa",
          "severity": "error",
          "message": "Mixed content detected - PWA requires HTTPS",
          "line": 11,
          "column": 14,
          "excerpt": "//   url: 'http://localhost:3000',",
          "suggestion": "Replace http:// with https:// or relative URLs for PWA compliance",
          "file": "playwright.config.ts",
          "exactLocation": "playwright.config.ts:11:14"
        }
      ],
      "score": 85
    },
    "next.config.js": {
      "path": "next.config.js",
      "issues": [
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 22,
          "column": 1,
          "excerpt": "  fallbacks: { document: '/offline' }\r",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "next.config.js"
        },
        {
          "rule": "security/headers-config",
          "category": "security",
          "severity": "error",
          "message": "Security headers function not configured",
          "line": 1,
          "column": 1,
          "excerpt": "No headers() function found",
          "suggestion": "Add async headers() function with security headers",
          "file": "next.config.js"
        }
      ],
      "score": 70
    },
    "tests\\keyboard-focus.spec.ts": {
      "path": "tests\\keyboard-focus.spec.ts",
      "issues": [
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 36,
          "column": 1,
          "excerpt": "        const previousFocus = await page.evaluate(() => document.activeElement?.tagName)\r",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "tests\\keyboard-focus.spec.ts"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 15,
          "column": 7,
          "excerpt": "console.log('No modals found on page - skipping keyboard trap test')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:15:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 25,
          "column": 7,
          "excerpt": "console.log(`Testing modal ${i + 1}: ${(await modal.getAttribute('role')) || 'unknown'}`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:25:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 114,
          "column": 7,
          "excerpt": "console.log('No forms found on page - skipping form focus test')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:114:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 128,
          "column": 7,
          "excerpt": "console.log(",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:128:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 166,
          "column": 7,
          "excerpt": "console.log('No skip links found - skipping skip link test')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:166:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 242,
          "column": 5,
          "excerpt": "console.warn('Error testing Escape key:', error)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:242:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 203,
          "column": 11,
          "excerpt": "// Helper function to test Escape key functionality",
          "suggestion": "",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:203:11"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 204,
          "column": 7,
          "excerpt": "async function testEscapeKey(page: any, modal: any): Promise<boolean> {",
          "suggestion": "",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:204:7"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (246 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 246 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "tests\\keyboard-focus.spec.ts"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 208,
          "column": 81,
          "excerpt": "'[aria-label*=\"close\"], [aria-label*=\"Close\"], .close, .close-btn, button[onClick*=\"close\"]'",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:208:81"
        },
        {
          "rule": "typescript/any-usage",
          "category": "quality",
          "severity": "error",
          "message": "Avoid using \"any\" type - use proper typing",
          "line": 204,
          "column": 34,
          "excerpt": "async function testEscapeKey(page: any, modal: any): Promise<boolean> {",
          "suggestion": "Replace \"any\" with proper TypeScript types or \"unknown\" if type is truly unknown",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:204:34"
        },
        {
          "rule": "typescript/any-usage",
          "category": "quality",
          "severity": "error",
          "message": "Avoid using \"any\" type - use proper typing",
          "line": 204,
          "column": 46,
          "excerpt": "async function testEscapeKey(page: any, modal: any): Promise<boolean> {",
          "suggestion": "Replace \"any\" with proper TypeScript types or \"unknown\" if type is truly unknown",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:204:46"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 139,
          "column": 9,
          "excerpt": "const isFocusable = (await element.isVisible()) && !(await element.getAttribute('disabled'))",
          "suggestion": "",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:139:9"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 234,
          "column": 5,
          "excerpt": "const beforeState =",
          "suggestion": "",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:234:5"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 237,
          "column": 5,
          "excerpt": "const afterState =",
          "suggestion": "",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:237:5"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 208,
          "column": 81,
          "excerpt": "'[aria-label*=\"close\"], [aria-label*=\"Close\"], .close, .close-btn, button[onClick*=\"close\"]'",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "tests\\keyboard-focus.spec.ts",
          "exactLocation": "tests\\keyboard-focus.spec.ts:208:81"
        }
      ],
      "score": 0
    },
    "tests\\coverage.spec.ts": {
      "path": "tests\\coverage.spec.ts",
      "issues": [
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 34,
          "column": 5,
          "excerpt": "console.log(`JS Coverage: ${pct.toFixed(2)}% (${used}/${total} bytes)`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:34:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 42,
          "column": 7,
          "excerpt": "console.log('Unused JavaScript files:')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:42:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 43,
          "column": 32,
          "excerpt": "unusedFiles.forEach(f => console.log(`  - ${f.url}`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:43:32"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 70,
          "column": 5,
          "excerpt": "console.log(`Dashboard JS Coverage: ${pct.toFixed(2)}% (${used}/${total} bytes)`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:70:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 95,
          "column": 5,
          "excerpt": "console.log(`Forms JS Coverage: ${pct.toFixed(2)}% (${used}/${total} bytes)`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:95:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 125,
          "column": 5,
          "excerpt": "console.log(`Total JS Size: ${(totalJSSize / 1024).toFixed(2)}KB`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:125:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 126,
          "column": 5,
          "excerpt": "console.log(`Total CSS Size: ${(totalCSSSize / 1024).toFixed(2)}KB`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:126:5"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 28,
          "column": 5,
          "excerpt": "const pct = (used / total) * 100",
          "suggestion": "",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:28:5"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 65,
          "column": 5,
          "excerpt": "const pct = (used / total) * 100",
          "suggestion": "",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:65:5"
        },
        {
          "rule": "typescript/explicit-returns",
          "category": "quality",
          "severity": "warning",
          "message": "Function should have explicit return type annotation",
          "line": 90,
          "column": 5,
          "excerpt": "const pct = (used / total) * 100",
          "suggestion": "",
          "file": "tests\\coverage.spec.ts",
          "exactLocation": "tests\\coverage.spec.ts:90:5"
        }
      ],
      "score": 20
    },
    "tests\\basic.spec.ts": {
      "path": "tests\\basic.spec.ts",
      "issues": [],
      "score": 100
    },
    "tests\\a11y.spec.ts": {
      "path": "tests\\a11y.spec.ts",
      "issues": [],
      "score": 100
    },
    "src\\utils.js": {
      "path": "src\\utils.js",
      "issues": [
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 101,
          "column": 10,
          "excerpt": "return new Date().toISOString().replace(/[:.]/g, '-')",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:101:10"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 4,
          "column": 14,
          "excerpt": "export async function createAuditDirectory(outputDir) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:4:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 28,
          "column": 8,
          "excerpt": "export function ensureDirectoryExists(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:28:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 35,
          "column": 8,
          "excerpt": "export function writeFile(filePath, content) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:35:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 45,
          "column": 8,
          "excerpt": "export function readFile(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:45:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 53,
          "column": 8,
          "excerpt": "export function getFileExtension(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:53:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 57,
          "column": 8,
          "excerpt": "export function isJavaScriptFile(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:57:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 62,
          "column": 8,
          "excerpt": "export function isReactFile(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:62:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 67,
          "column": 8,
          "excerpt": "export function isTypeScriptFile(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:67:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 72,
          "column": 8,
          "excerpt": "export function normalizePath(filePath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:72:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 76,
          "column": 8,
          "excerpt": "export function getRelativePath(basePath, fullPath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:76:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 80,
          "column": 8,
          "excerpt": "export function formatBytes(bytes) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:80:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 90,
          "column": 8,
          "excerpt": "export function formatDuration(ms) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:90:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 96,
          "column": 8,
          "excerpt": "export function sanitizeFileName(fileName) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:96:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 100,
          "column": 8,
          "excerpt": "export function createTimestamp() {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:100:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 104,
          "column": 8,
          "excerpt": "export function validateProjectPath(projectPath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:104:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 118,
          "column": 8,
          "excerpt": "export function getProjectInfo(projectPath) {",
          "suggestion": "",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:118:8"
        },
        {
          "rule": "security/sql-injection",
          "category": "security",
          "severity": "error",
          "message": "Potential SQL injection vulnerability",
          "line": 24,
          "column": 32,
          "excerpt": "throw new Error(`Failed to create audit directory: ${error.message}`)",
          "suggestion": "Use parameterized queries or ORM to prevent SQL injection",
          "file": "src\\utils.js",
          "exactLocation": "src\\utils.js:24:32"
        }
      ],
      "score": 0
    },
    "src\\scanner.js": {
      "path": "src\\scanner.js",
      "issues": [
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 533,
          "column": 1,
          "excerpt": "  const hasOfflineFallback = /fallbacks.*document.*offline/i.test(content)",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "src\\scanner.js"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function scanProject(projectPath) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 126,
          "column": 1,
          "excerpt": "function scanFile(content, relativePath, absolutePath) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:126:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 143,
          "column": 1,
          "excerpt": "function checkRule(rule, content, lines, filePath) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:143:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 179,
          "column": 1,
          "excerpt": "function getLineNumber(content, index) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:179:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 183,
          "column": 1,
          "excerpt": "function getColumnNumber(content, index) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:183:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 189,
          "column": 1,
          "excerpt": "function getExactLocation(content, index) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:189:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 198,
          "column": 1,
          "excerpt": "function calculateFileScore(issues) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:198:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 219,
          "column": 7,
          "excerpt": "async function checkPublicFolderStructure(projectPath) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:219:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 441,
          "column": 1,
          "excerpt": "function checkNextConfigPWA(content, filePath) {",
          "suggestion": "",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:441:1"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (551 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 551 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\scanner.js"
        },
        {
          "rule": "security/unsafe-eval",
          "category": "security",
          "severity": "error",
          "message": "Unsafe eval() usage detected",
          "line": 172,
          "column": 36,
          "excerpt": "const customIssues = rule.checkFunction(content, lines, filePath)",
          "suggestion": "Avoid eval() and use safer alternatives",
          "file": "src\\scanner.js",
          "exactLocation": "src\\scanner.js:172:36"
        }
      ],
      "score": 0
    },
    "src\\runtime-auditor.js": {
      "path": "src\\runtime-auditor.js",
      "issues": [
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 17,
          "column": 5,
          "excerpt": "console.log(chalk.blue('  üîç Running Lighthouse CI...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:17:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 25,
          "column": 5,
          "excerpt": "console.log(chalk.blue('  üé≠ Running Playwright tests...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:25:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 33,
          "column": 5,
          "excerpt": "console.log(chalk.blue('  üìä Running coverage analysis...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:33:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 41,
          "column": 5,
          "excerpt": "console.log(chalk.blue('  üì¶ Running bundle composition guard...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:41:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 48,
          "column": 5,
          "excerpt": "console.log(chalk.red('  ‚ùå Runtime audit error:', error.message))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:48:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 59,
          "column": 7,
          "excerpt": "console.log(chalk.yellow('    ‚ö†Ô∏è  Installing Lighthouse CI...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:59:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 261,
          "column": 7,
          "excerpt": "console.log(chalk.yellow('    ‚ö†Ô∏è  Installing Playwright...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:261:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function runRuntimeAudits(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 55,
          "column": 7,
          "excerpt": "async function runLighthouseCI(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:55:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 109,
          "column": 7,
          "excerpt": "async function runBundleGuard(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:109:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 207,
          "column": 7,
          "excerpt": "async function extractBundleSizes(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:207:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 224,
          "column": 3,
          "excerpt": "function fileSizeKB(rel) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:224:3"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 249,
          "column": 7,
          "excerpt": "async function readIfExists(p) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:249:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 257,
          "column": 7,
          "excerpt": "async function runPlaywrightTests(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:257:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 311,
          "column": 7,
          "excerpt": "async function runCoverageAnalysis(projectPath) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:311:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 358,
          "column": 1,
          "excerpt": "function parseLighthouseIssues(output, error) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:358:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 409,
          "column": 1,
          "excerpt": "function parsePlaywrightIssues(output, error) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:409:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 454,
          "column": 1,
          "excerpt": "function parseCoverageIssues(output, error) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:454:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 507,
          "column": 1,
          "excerpt": "function calculateLighthouseScore(issues) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:507:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 514,
          "column": 1,
          "excerpt": "function calculatePlaywrightScore(issues) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:514:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 521,
          "column": 1,
          "excerpt": "function calculateCoverageScore(issues) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:521:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 528,
          "column": 7,
          "excerpt": "async function runCommand(command, args, options = {}) {",
          "suggestion": "",
          "file": "src\\runtime-auditor.js",
          "exactLocation": "src\\runtime-auditor.js:528:7"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (557 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 557 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\runtime-auditor.js"
        }
      ],
      "score": 0
    },
    "src\\rules.js": {
      "path": "src\\rules.js",
      "issues": [
        {
          "rule": "next/app-router",
          "category": "nextjs",
          "severity": "warning",
          "message": "Consider using App Router (app/ directory) for new projects",
          "line": 955,
          "column": 85,
          "excerpt": "shouldCheck: filePath => filePath.includes('components/') || filePath.includes('pages/'),",
          "suggestion": "Migrate to App Router for modern Next.js features",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:955:85"
        },
        {
          "rule": "next/app-router",
          "category": "nextjs",
          "severity": "warning",
          "message": "Consider using App Router (app/ directory) for new projects",
          "line": 1455,
          "column": 49,
          "excerpt": "shouldCheck: filePath => filePath.includes('pages/') || filePath.includes('components/'),",
          "suggestion": "Migrate to App Router for modern Next.js features",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1455:49"
        },
        {
          "rule": "next/app-router",
          "category": "nextjs",
          "severity": "warning",
          "message": "Consider using App Router (app/ directory) for new projects",
          "line": 1700,
          "column": 49,
          "excerpt": "shouldCheck: filePath => filePath.includes('pages/') || filePath.includes('app/'),",
          "suggestion": "Migrate to App Router for modern Next.js features",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1700:49"
        },
        {
          "rule": "next/app-router",
          "category": "nextjs",
          "severity": "warning",
          "message": "Consider using App Router (app/ directory) for new projects",
          "line": 1787,
          "column": 85,
          "excerpt": "shouldCheck: filePath => filePath.includes('components/') || filePath.includes('pages/'),",
          "suggestion": "Migrate to App Router for modern Next.js features",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1787:85"
        },
        {
          "rule": "next/app-router",
          "category": "nextjs",
          "severity": "warning",
          "message": "Consider using App Router (app/ directory) for new projects",
          "line": 2036,
          "column": 78,
          "excerpt": "shouldCheck: filePath => filePath.includes('app/') || filePath.includes('pages/'),",
          "suggestion": "Migrate to App Router for modern Next.js features",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2036:78"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 152,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:152:15"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 489,
          "column": 15,
          "excerpt": "pattern: /<img[^>]*>(?!.*alt=)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:489:15"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 891,
          "column": 10,
          "excerpt": "/<img[^>]*src=[\"']([^\"']*\\.png)[\"'][^>]*>/gi,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:891:10"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 937,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:937:15"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 945,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:945:15"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 2394,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2394:15"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 325,
          "column": 33,
          "excerpt": "trimmedLine.includes('import _ from \"lodash\"') ||",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:325:33"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 326,
          "column": 33,
          "excerpt": "trimmedLine.includes(\"import _ from 'lodash'\")",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:326:33"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Default import from lodash detected - this imports the entire library",
          "line": 325,
          "column": 1,
          "excerpt": "trimmedLine.includes('import _ from \"lodash\"') ||",
          "suggestion": "Use specific imports: import pick from \"lodash/pick\", import debounce from \"lodash/debounce\"",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:325:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Default import from lodash detected - this imports the entire library",
          "line": 326,
          "column": 1,
          "excerpt": "trimmedLine.includes(\"import _ from 'lodash'\")",
          "suggestion": "Use specific imports: import pick from \"lodash/pick\", import debounce from \"lodash/debounce\"",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:326:1"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 377,
          "column": 22,
          "excerpt": "// Check for Math.random() usage",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:377:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 378,
          "column": 35,
          "excerpt": "if (trimmedLine.includes('Math.random()')) {",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:378:35"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 383,
          "column": 23,
          "excerpt": "message: 'Math.random() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:383:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 385,
          "column": 42,
          "excerpt": "column: trimmedLine.indexOf('Math.random()') + 1,",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:385:42"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 389,
          "column": 78,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Math.random()') + 1}`",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:389:78"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 393,
          "column": 22,
          "excerpt": "// Check for Date.now() usage",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:393:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 394,
          "column": 35,
          "excerpt": "if (trimmedLine.includes('Date.now()')) {",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:394:35"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 399,
          "column": 23,
          "excerpt": "message: 'Date.now() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:399:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 401,
          "column": 42,
          "excerpt": "column: trimmedLine.indexOf('Date.now()') + 1,",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:401:42"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 406,
          "column": 78,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Date.now()') + 1}`",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:406:78"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 410,
          "column": 22,
          "excerpt": "// Check for new Date() without stable seed",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:410:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 411,
          "column": 35,
          "excerpt": "if (trimmedLine.includes('new Date()') && !trimmedLine.includes('new Date(')) {",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:411:35"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 416,
          "column": 23,
          "excerpt": "message: 'new Date() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:416:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 418,
          "column": 42,
          "excerpt": "column: trimmedLine.indexOf('new Date()') + 1,",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:418:42"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 423,
          "column": 78,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('new Date()') + 1}`",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:423:78"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 427,
          "column": 22,
          "excerpt": "// Check for crypto.randomUUID() usage",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:427:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 428,
          "column": 35,
          "excerpt": "if (trimmedLine.includes('crypto.randomUUID()')) {",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:428:35"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 433,
          "column": 23,
          "excerpt": "message: 'crypto.randomUUID() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:433:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 435,
          "column": 42,
          "excerpt": "column: trimmedLine.indexOf('crypto.randomUUID()') + 1,",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:435:42"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 439,
          "column": 78,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('crypto.randomUUID()') + 1}`",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:439:78"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 443,
          "column": 22,
          "excerpt": "// Check for Math.floor(Math.random()) patterns",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:443:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 444,
          "column": 35,
          "excerpt": "if (trimmedLine.includes('Math.floor(Math.random()')) {",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:444:35"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 449,
          "column": 23,
          "excerpt": "message: 'Math.floor(Math.random()) detected - this causes SSR hydration mismatches',",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:449:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 451,
          "column": 42,
          "excerpt": "column: trimmedLine.indexOf('Math.floor(Math.random()') + 1,",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:451:42"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 455,
          "column": 78,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Math.floor(Math.random()') + 1}`",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:455:78"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 378,
          "column": 27,
          "excerpt": "if (trimmedLine.includes('Math.random()')) {",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:378:27"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 383,
          "column": 11,
          "excerpt": "message: 'Math.random() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:383:11"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 385,
          "column": 30,
          "excerpt": "column: trimmedLine.indexOf('Math.random()') + 1,",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:385:30"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 389,
          "column": 66,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Math.random()') + 1}`",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:389:66"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 394,
          "column": 27,
          "excerpt": "if (trimmedLine.includes('Date.now()')) {",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:394:27"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 399,
          "column": 11,
          "excerpt": "message: 'Date.now() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:399:11"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 401,
          "column": 30,
          "excerpt": "column: trimmedLine.indexOf('Date.now()') + 1,",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:401:30"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 406,
          "column": 66,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Date.now()') + 1}`",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:406:66"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "crypto.randomUUID() detected - this causes SSR hydration mismatches",
          "line": 428,
          "column": 27,
          "excerpt": "if (trimmedLine.includes('crypto.randomUUID()')) {",
          "suggestion": "Use a stable ID or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:428:27"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "crypto.randomUUID() detected - this causes SSR hydration mismatches",
          "line": 433,
          "column": 11,
          "excerpt": "message: 'crypto.randomUUID() detected - this causes SSR hydration mismatches',",
          "suggestion": "Use a stable ID or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:433:11"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "crypto.randomUUID() detected - this causes SSR hydration mismatches",
          "line": 435,
          "column": 30,
          "excerpt": "column: trimmedLine.indexOf('crypto.randomUUID()') + 1,",
          "suggestion": "Use a stable ID or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:435:30"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "crypto.randomUUID() detected - this causes SSR hydration mismatches",
          "line": 439,
          "column": 66,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('crypto.randomUUID()') + 1}`",
          "suggestion": "Use a stable ID or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:439:66"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 444,
          "column": 38,
          "excerpt": "if (trimmedLine.includes('Math.floor(Math.random()')) {",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:444:38"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.floor(Math.random()) detected - this causes SSR hydration mismatches",
          "line": 444,
          "column": 27,
          "excerpt": "if (trimmedLine.includes('Math.floor(Math.random()')) {",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:444:27"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 449,
          "column": 22,
          "excerpt": "message: 'Math.floor(Math.random()) detected - this causes SSR hydration mismatches',",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:449:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.floor(Math.random()) detected - this causes SSR hydration mismatches",
          "line": 449,
          "column": 11,
          "excerpt": "message: 'Math.floor(Math.random()) detected - this causes SSR hydration mismatches',",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:449:11"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 451,
          "column": 41,
          "excerpt": "column: trimmedLine.indexOf('Math.floor(Math.random()') + 1,",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:451:41"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.floor(Math.random()) detected - this causes SSR hydration mismatches",
          "line": 451,
          "column": 30,
          "excerpt": "column: trimmedLine.indexOf('Math.floor(Math.random()') + 1,",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:451:30"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 455,
          "column": 77,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Math.floor(Math.random()') + 1}`",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:455:77"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.floor(Math.random()) detected - this causes SSR hydration mismatches",
          "line": 455,
          "column": 66,
          "excerpt": "exactLocation: `${filePath}:${lineNumber}:${trimmedLine.indexOf('Math.floor(Math.random()') + 1}`",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:455:66"
        },
        {
          "rule": "mui/deprecated-apis",
          "category": "mui",
          "severity": "error",
          "message": "Deprecated MUI v4 styling API detected",
          "line": 479,
          "column": 16,
          "excerpt": "pattern: /(makeStyles|withStyles|@mui\\/styles)/,",
          "suggestion": "Use sx prop or styled() API from MUI v5",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:479:16"
        },
        {
          "rule": "mui/deprecated-apis",
          "category": "mui",
          "severity": "error",
          "message": "Deprecated MUI v4 styling API detected",
          "line": 479,
          "column": 27,
          "excerpt": "pattern: /(makeStyles|withStyles|@mui\\/styles)/,",
          "suggestion": "Use sx prop or styled() API from MUI v5",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:479:27"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 152,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:152:15"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 891,
          "column": 10,
          "excerpt": "/<img[^>]*src=[\"']([^\"']*\\.png)[\"'][^>]*>/gi,",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:891:10"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 937,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:937:15"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 945,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:945:15"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 2394,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2394:15"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 103,
          "column": 27,
          "excerpt": "message: 'Unnecessary \"use client\" directive detected',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:103:27"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 104,
          "column": 21,
          "excerpt": "pattern: /^[\\s]*\"use client\"/m,",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:104:21"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 105,
          "column": 25,
          "excerpt": "suggestion: 'Remove \"use client\" if component doesn\\'t need client-side features',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:105:25"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 108,
          "column": 53,
          "excerpt": "const clientDirectiveIndex = content.indexOf('\"use client\"')",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:108:53"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 125,
          "column": 35,
          "excerpt": "message: 'Unnecessary \"use client\" directive',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:125:35"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 130,
          "column": 23,
          "excerpt": "'Remove \"use client\" directive as component doesn\\'t use client-side features',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:130:23"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 523,
          "column": 15,
          "excerpt": "pattern: /\"use client\"/g,",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:523:15"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 526,
          "column": 43,
          "excerpt": "const clientCount = (content.match(/\"use client\"/g) || []).length",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:526:43"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 536,
          "column": 30,
          "excerpt": "excerpt: 'Multiple \"use client\" directives detected',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:536:30"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 560,
          "column": 82,
          "excerpt": "'Server Component importing client-only APIs or using client hooks without \"use client\"',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:560:82"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 565,
          "column": 27,
          "excerpt": "// If file declares \"use client\", it is not an RSC file",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:565:27"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 566,
          "column": 40,
          "excerpt": "const isClientComponent = /^[\\s]*\"use client\"|^[\\s]*'use client'/m.test(content)",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:566:40"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 579,
          "column": 71,
          "excerpt": "message: 'Client hook used inside a Server Component. Add \"use client\" or refactor.',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:579:71"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 584,
          "column": 68,
          "excerpt": "'Move client-only logic to a Client Component or add \"use client\" at the top if required',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:584:68"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 636,
          "column": 51,
          "excerpt": "'Create a client wrapper component (\"use client\") or use next/dynamic for the import where appropriate',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:636:51"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "File has 15 client components",
          "line": 1,
          "column": 1,
          "excerpt": "Multiple \"use client\" directives detected",
          "suggestion": "Consider converting some components to Server Components",
          "file": "src\\rules.js"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Client hook used inside a Server Component. Add \"use client\" or refactor.",
          "line": 387,
          "column": 1,
          "excerpt": "            suggestion: 'Use a stable seed or move to useEffect for client-side only rendering',",
          "suggestion": "Move client-only logic to a Client Component or add \"use client\" at the top if required",
          "file": "src\\rules.js"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 590,
          "column": 1,
          "excerpt": "      // Disallow window/document/localStorage access in RSC",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "src\\rules.js"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 590,
          "column": 1,
          "excerpt": "      // Disallow window/document/localStorage access in RSC",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "src\\rules.js"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 590,
          "column": 1,
          "excerpt": "      // Disallow window/document/localStorage access in RSC",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "src\\rules.js"
        },
        {
          "rule": "security/dangerous-html",
          "category": "security",
          "severity": "error",
          "message": "dangerouslySetInnerHTML usage detected",
          "line": 679,
          "column": 15,
          "excerpt": "message: 'dangerouslySetInnerHTML usage detected',",
          "suggestion": "Sanitize HTML content or use React components instead",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:679:15"
        },
        {
          "rule": "security/dangerous-html",
          "category": "security",
          "severity": "error",
          "message": "dangerouslySetInnerHTML usage detected",
          "line": 680,
          "column": 15,
          "excerpt": "pattern: /dangerouslySetInnerHTML/,",
          "suggestion": "Sanitize HTML content or use React components instead",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:680:15"
        },
        {
          "rule": "security/external-links",
          "category": "security",
          "severity": "info",
          "message": "External link missing security attributes",
          "line": 2387,
          "column": 72,
          "excerpt": "suggestion: 'Add rel=\"noopener noreferrer\" for security when using target=\"_blank\"'",
          "suggestion": "Add rel=\"noopener noreferrer\" for security",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2387:72"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 371,
          "column": 33,
          "excerpt": "trimmedLine.includes('console.log') ||",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:371:33"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 372,
          "column": 33,
          "excerpt": "trimmedLine.includes('console.error')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:372:33"
        },
        {
          "rule": "image/missing-alt",
          "category": "image",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 152,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute for accessibility and SEO",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:152:15"
        },
        {
          "rule": "image/missing-alt",
          "category": "image",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 891,
          "column": 10,
          "excerpt": "/<img[^>]*src=[\"']([^\"']*\\.png)[\"'][^>]*>/gi,",
          "suggestion": "Add alt attribute for accessibility and SEO",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:891:10"
        },
        {
          "rule": "image/missing-alt",
          "category": "image",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 945,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute for accessibility and SEO",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:945:15"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 152,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:152:15"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 489,
          "column": 15,
          "excerpt": "pattern: /<img[^>]*>(?!.*alt=)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:489:15"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 891,
          "column": 10,
          "excerpt": "/<img[^>]*src=[\"']([^\"']*\\.png)[\"'][^>]*>/gi,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:891:10"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 937,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:937:15"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 945,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:945:15"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 2394,
          "column": 15,
          "excerpt": "pattern: /<img(?!.*alt=)[^>]*>/i,",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2394:15"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 1,
          "column": 11,
          "excerpt": "// Helper function to generate specific complexity suggestions",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1:11"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 2,
          "column": 1,
          "excerpt": "function generateComplexitySuggestion(complexity, funcContent, filePath) {",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 60,
          "column": 24,
          "excerpt": "'üõ†Ô∏è Utility function detected - break into smaller, single-purpose functions'",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:60:24"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 70,
          "column": 32,
          "excerpt": "suggestions.push('‚úÇÔ∏è Break function into smaller functions with single responsibilities')",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:70:32"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 84,
          "column": 32,
          "excerpt": "return 'Break down complex function into smaller, simpler functions'",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:84:32"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 1339,
          "column": 42,
          "excerpt": "// Skip if it's a simple arrow function or event handler",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1339:42"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 1352,
          "column": 56,
          "excerpt": "suggestion: 'Add return type annotation: function funcName(): ReturnType',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1352:56"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 2267,
          "column": 38,
          "excerpt": "message: 'Security headers function not configured',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2267:38"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 2270,
          "column": 34,
          "excerpt": "excerpt: 'No headers() function found',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2270:34"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 2271,
          "column": 44,
          "excerpt": "suggestion: 'Add async headers() function with security headers',",
          "suggestion": "",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2271:44"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (2736 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 2736 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\rules.js"
        },
        {
          "rule": "perf/bundle-size",
          "category": "performance",
          "severity": "warning",
          "message": "Large import detected - consider code splitting",
          "line": 325,
          "column": 33,
          "excerpt": "trimmedLine.includes('import _ from \"lodash\"') ||",
          "suggestion": "Use dynamic imports or tree-shakeable alternatives",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:325:33"
        },
        {
          "rule": "perf/bundle-size",
          "category": "performance",
          "severity": "warning",
          "message": "Large import detected - consider code splitting",
          "line": 326,
          "column": 33,
          "excerpt": "trimmedLine.includes(\"import _ from 'lodash'\")",
          "suggestion": "Use dynamic imports or tree-shakeable alternatives",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:326:33"
        },
        {
          "rule": "security/xss-vulnerability",
          "category": "security",
          "severity": "error",
          "message": "Potential XSS vulnerability detected",
          "line": 1138,
          "column": 15,
          "excerpt": "pattern: /innerHTML|outerHTML|document\\.write/,",
          "suggestion": "Use textContent or React components instead of innerHTML",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1138:15"
        },
        {
          "rule": "security/xss-vulnerability",
          "category": "security",
          "severity": "error",
          "message": "Potential XSS vulnerability detected",
          "line": 1138,
          "column": 25,
          "excerpt": "pattern: /innerHTML|outerHTML|document\\.write/,",
          "suggestion": "Use textContent or React components instead of innerHTML",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1138:25"
        },
        {
          "rule": "security/xss-vulnerability",
          "category": "security",
          "severity": "error",
          "message": "Potential XSS vulnerability detected",
          "line": 1139,
          "column": 65,
          "excerpt": "suggestion: 'Use textContent or React components instead of innerHTML'",
          "suggestion": "Use textContent or React components instead of innerHTML",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1139:65"
        },
        {
          "rule": "security/unsafe-eval",
          "category": "security",
          "severity": "error",
          "message": "Unsafe eval() usage detected",
          "line": 1145,
          "column": 22,
          "excerpt": "message: 'Unsafe eval() usage detected',",
          "suggestion": "Avoid eval() and use safer alternatives",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1145:22"
        },
        {
          "rule": "security/unsafe-eval",
          "category": "security",
          "severity": "error",
          "message": "Unsafe eval() usage detected",
          "line": 1147,
          "column": 24,
          "excerpt": "suggestion: 'Avoid eval() and use safer alternatives'",
          "suggestion": "Avoid eval() and use safer alternatives",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1147:24"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 112,
          "column": 56,
          "excerpt": "const hasState = /\\buseState\\b|\\buseEffect\\b|\\bonClick\\b|\\bonChange\\b|\\bonSubmit\\b/.test(",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:112:56"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 513,
          "column": 24,
          "excerpt": "pattern: /<div[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:513:24"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 1341,
          "column": 35,
          "excerpt": "const isEventHandler = /onClick|onChange|onSubmit|onBlur|onFocus/.test(funcName)",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1341:35"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 1741,
          "column": 24,
          "excerpt": "pattern: /<div[^>]*onClick|<span[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1741:24"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 1741,
          "column": 42,
          "excerpt": "pattern: /<div[^>]*onClick|<span[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1741:42"
        },
        {
          "rule": "security/sql-injection",
          "category": "security",
          "severity": "error",
          "message": "Potential SQL injection vulnerability",
          "line": 976,
          "column": 24,
          "excerpt": "suggestion: `Create test file: ${filePath.replace(/\\.(tsx|ts|jsx|js)$/, '.test.$1')}`,",
          "suggestion": "Use parameterized queries or ORM to prevent SQL injection",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:976:24"
        },
        {
          "rule": "pwa/mixed-content",
          "category": "pwa",
          "severity": "error",
          "message": "Mixed content detected - PWA requires HTTPS",
          "line": 2142,
          "column": 26,
          "excerpt": "suggestion: 'Replace http:// with https:// or relative URLs for PWA compliance'",
          "suggestion": "Replace http:// with https:// or relative URLs for PWA compliance",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2142:26"
        },
        {
          "rule": "a11y/blank-target-security",
          "category": "accessibility",
          "severity": "error",
          "message": "target=\"_blank\" without rel=\"noopener\" is a security vulnerability",
          "line": 2387,
          "column": 72,
          "excerpt": "suggestion: 'Add rel=\"noopener noreferrer\" for security when using target=\"_blank\"'",
          "suggestion": "Add rel=\"noopener noreferrer\" for security when using target=\"_blank\"",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:2387:72"
        },
        {
          "rule": "a11y/image-alt-required",
          "category": "accessibility",
          "severity": "error",
          "message": "All images must have alt attributes for accessibility compliance",
          "line": 152,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute to all images for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:152:15"
        },
        {
          "rule": "a11y/image-alt-required",
          "category": "accessibility",
          "severity": "error",
          "message": "All images must have alt attributes for accessibility compliance",
          "line": 891,
          "column": 10,
          "excerpt": "/<img[^>]*src=[\"']([^\"']*\\.png)[\"'][^>]*>/gi,",
          "suggestion": "Add alt attribute to all images for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:891:10"
        },
        {
          "rule": "a11y/image-alt-required",
          "category": "accessibility",
          "severity": "error",
          "message": "All images must have alt attributes for accessibility compliance",
          "line": 945,
          "column": 15,
          "excerpt": "pattern: /<img\\b(?!.*next\\/image)/,",
          "suggestion": "Add alt attribute to all images for screen reader accessibility",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:945:15"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 112,
          "column": 56,
          "excerpt": "const hasState = /\\buseState\\b|\\buseEffect\\b|\\bonClick\\b|\\bonChange\\b|\\bonSubmit\\b/.test(",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:112:56"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 513,
          "column": 24,
          "excerpt": "pattern: /<div[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:513:24"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 1341,
          "column": 35,
          "excerpt": "const isEventHandler = /onClick|onChange|onSubmit|onBlur|onFocus/.test(funcName)",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1341:35"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 1741,
          "column": 24,
          "excerpt": "pattern: /<div[^>]*onClick|<span[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1741:24"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 1741,
          "column": 42,
          "excerpt": "pattern: /<div[^>]*onClick|<span[^>]*onClick/,",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "src\\rules.js",
          "exactLocation": "src\\rules.js:1741:42"
        }
      ],
      "score": 0
    },
    "src\\reporter.js": {
      "path": "src\\reporter.js",
      "issues": [
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 26,
          "column": 18,
          "excerpt": "timestamp: new Date().toISOString(),",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:26:18"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 70,
          "column": 19,
          "excerpt": "**Audit Date:** ${new Date().toLocaleDateString()}",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:70:19"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 17,
          "column": 5,
          "excerpt": "console.log(chalk.green(`‚úÖ Reports generated in ${outputDir}/`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:17:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function generateReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 23,
          "column": 7,
          "excerpt": "async function generateJSONReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:23:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 57,
          "column": 7,
          "excerpt": "async function generateMarkdownReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:57:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 141,
          "column": 1,
          "excerpt": "function getProjectStatus(score) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:141:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 149,
          "column": 1,
          "excerpt": "function generateCategoryTable(categoryScores) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:149:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 177,
          "column": 1,
          "excerpt": "function generateTopIssuesTable(topIssues) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:177:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 201,
          "column": 1,
          "excerpt": "function generateFileAnalysis(files) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:201:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 221,
          "column": 1,
          "excerpt": "function generateCategoryDetails(categoryBreakdown) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:221:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 315,
          "column": 1,
          "excerpt": "function generateAllFilesSummary(files) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:315:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 335,
          "column": 1,
          "excerpt": "function generateESLintSection(eslintResults) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:335:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 392,
          "column": 1,
          "excerpt": "function generateDetailedMetrics(results, grades) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:392:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 461,
          "column": 1,
          "excerpt": "function generatePriorityMatrix(results) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:461:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 536,
          "column": 1,
          "excerpt": "function generateFixInstructions() {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:536:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 560,
          "column": 1,
          "excerpt": "function getStatusEmoji(score) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:560:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 568,
          "column": 1,
          "excerpt": "function getSeverityIcon(severity) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:568:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 581,
          "column": 1,
          "excerpt": "function getScoreIcon(score) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:581:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 589,
          "column": 1,
          "excerpt": "function generatePWASection(pwaResults) {",
          "suggestion": "",
          "file": "src\\reporter.js",
          "exactLocation": "src\\reporter.js:589:1"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (611 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 611 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\reporter.js"
        }
      ],
      "score": 0
    },
    "src\\reporter-old.js": {
      "path": "src\\reporter-old.js",
      "issues": [
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 122,
          "column": 48,
          "excerpt": "Test each major route at various screen sizes (320px to 1440px):",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:122:48"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 122,
          "column": 57,
          "excerpt": "Test each major route at various screen sizes (320px to 1440px):",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:122:57"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 26,
          "column": 18,
          "excerpt": "timestamp: new Date().toISOString(),",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:26:18"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 69,
          "column": 19,
          "excerpt": "**Audit Date:** ${new Date().toLocaleDateString()}",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:69:19"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 17,
          "column": 5,
          "excerpt": "console.log(chalk.green(`‚úÖ Reports generated in ${outputDir}/`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:17:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function generateReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 23,
          "column": 7,
          "excerpt": "async function generateJSONReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:23:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 57,
          "column": 7,
          "excerpt": "async function generateMarkdownReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:57:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 190,
          "column": 1,
          "excerpt": "function getProjectStatus(score) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:190:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 198,
          "column": 1,
          "excerpt": "function generateCategoryTable(categoryScores) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:198:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 226,
          "column": 1,
          "excerpt": "function generateTopIssuesTable(topIssues) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:226:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 242,
          "column": 1,
          "excerpt": "function generateFileAnalysis(files) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:242:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 265,
          "column": 1,
          "excerpt": "function generateCategoryDetails(categoryBreakdown) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:265:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 280,
          "column": 1,
          "excerpt": "function generateDetailedMetrics(files) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:280:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 372,
          "column": 1,
          "excerpt": "function generatePriorityMatrix(files) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:372:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 431,
          "column": 1,
          "excerpt": "function generateDetailedIssues(files) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:431:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 522,
          "column": 1,
          "excerpt": "function getStatusEmoji(score) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:522:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 530,
          "column": 1,
          "excerpt": "function getSeverityIcon(severity) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:530:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 543,
          "column": 1,
          "excerpt": "function getScoreIcon(score) {",
          "suggestion": "",
          "file": "src\\reporter-old.js",
          "exactLocation": "src\\reporter-old.js:543:1"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (550 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 550 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\reporter-old.js"
        }
      ],
      "score": 0
    },
    "src\\reporter-fixed.js": {
      "path": "src\\reporter-fixed.js",
      "issues": [
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 26,
          "column": 18,
          "excerpt": "timestamp: new Date().toISOString(),",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:26:18"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 69,
          "column": 19,
          "excerpt": "**Audit Date:** ${new Date().toLocaleDateString()}",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:69:19"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 17,
          "column": 5,
          "excerpt": "console.log(chalk.green(`‚úÖ Reports generated in ${outputDir}/`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:17:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function generateReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 23,
          "column": 7,
          "excerpt": "async function generateJSONReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:23:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 57,
          "column": 7,
          "excerpt": "async function generateMarkdownReport(results, grades, outputDir) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:57:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 134,
          "column": 1,
          "excerpt": "function getProjectStatus(score) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:134:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 142,
          "column": 1,
          "excerpt": "function generateCategoryTable(categoryScores) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:142:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 170,
          "column": 1,
          "excerpt": "function generateTopIssuesTable(topIssues) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:170:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 194,
          "column": 1,
          "excerpt": "function generateFileAnalysis(files) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:194:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 211,
          "column": 1,
          "excerpt": "function generateCategoryDetails(categoryBreakdown) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:211:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 301,
          "column": 1,
          "excerpt": "function generateESLintSection(eslintResults) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:301:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 358,
          "column": 1,
          "excerpt": "function generateDetailedMetrics(results, grades) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:358:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 423,
          "column": 1,
          "excerpt": "function generatePriorityMatrix(results) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:423:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 492,
          "column": 1,
          "excerpt": "function generateFixInstructions() {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:492:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 516,
          "column": 1,
          "excerpt": "function getStatusEmoji(score) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:516:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 524,
          "column": 1,
          "excerpt": "function getSeverityIcon(severity) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:524:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 537,
          "column": 1,
          "excerpt": "function getScoreIcon(score) {",
          "suggestion": "",
          "file": "src\\reporter-fixed.js",
          "exactLocation": "src\\reporter-fixed.js:537:1"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (544 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 544 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\reporter-fixed.js"
        }
      ],
      "score": 0
    },
    "src\\pwa-scanner.js": {
      "path": "src\\pwa-scanner.js",
      "issues": [
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 4,
          "column": 14,
          "excerpt": "export async function runPWAAudit(projectPath) {",
          "suggestion": "",
          "file": "src\\pwa-scanner.js",
          "exactLocation": "src\\pwa-scanner.js:4:14"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (283 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 283 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\pwa-scanner.js"
        }
      ],
      "score": 84
    },
    "src\\manual-check.js": {
      "path": "src\\manual-check.js",
      "issues": [
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 134,
          "column": 62,
          "excerpt": "section += 'Test each major route at various screen sizes (320px to 1440px):\\n\\n';",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:134:62"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 134,
          "column": 71,
          "excerpt": "section += 'Test each major route at various screen sizes (320px to 1440px):\\n\\n';",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:134:71"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 55,
          "column": 18,
          "excerpt": "timestamp: new Date().toISOString(),",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:55:18"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 25,
          "column": 5,
          "excerpt": "console.log(chalk.blue('üìù Adding Manual Check Result'));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:25:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 26,
          "column": 5,
          "excerpt": "console.log(chalk.gray(`Project: ${options.path}`));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:26:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 27,
          "column": 5,
          "excerpt": "console.log(`Route: ${route}`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:27:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 28,
          "column": 5,
          "excerpt": "console.log(`Category: ${category}`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:28:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 29,
          "column": 5,
          "excerpt": "console.log(`Result: ${result}`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:29:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 30,
          "column": 16,
          "excerpt": "if (notes) console.log(`Notes: ${notes}\\n`);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:30:16"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 70,
          "column": 7,
          "excerpt": "console.log(chalk.yellow(`‚ö†Ô∏è  Updated existing ${category} check for ${route}`));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:70:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 73,
          "column": 7,
          "excerpt": "console.log(chalk.green(`‚úÖ Added ${category} check for ${route}`));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:73:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 82,
          "column": 5,
          "excerpt": "console.log(chalk.green('\\n‚úÖ Manual check added successfully!'));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:82:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 83,
          "column": 5,
          "excerpt": "console.log(chalk.blue(`üìÅ Updated reports in: ${options.output}/`));",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:83:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 86,
          "column": 5,
          "excerpt": "console.error(chalk.red('‚ùå Failed to add manual check:'), error.message);",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:86:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 94,
          "column": 5,
          "excerpt": "console.log('‚ö†Ô∏è  Markdown report not found, skipping update');",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:94:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 23,
          "column": 7,
          "excerpt": "async function main() {",
          "suggestion": "",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:23:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 91,
          "column": 7,
          "excerpt": "async function updateMarkdownReport(outputDir, report) {",
          "suggestion": "",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:91:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 129,
          "column": 1,
          "excerpt": "function generateManualChecksSection(manualChecks) {",
          "suggestion": "",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:129:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 202,
          "column": 1,
          "excerpt": "function getStatusEmoji(result) {",
          "suggestion": "",
          "file": "src\\manual-check.js",
          "exactLocation": "src\\manual-check.js:202:1"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (212 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 212 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "src\\manual-check.js"
        }
      ],
      "score": 0
    },
    "src\\index.js": {
      "path": "src\\index.js",
      "issues": [
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 27,
          "column": 5,
          "excerpt": "console.log(chalk.blue('üîç Next.js + MUI Audit Toolkit'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:27:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 28,
          "column": 5,
          "excerpt": "console.log(chalk.gray(`Scanning project at: ${options.path}\\n`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:28:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 34,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üìã Running ESLint analysis...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:34:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 38,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üîç Scanning for custom rule violations...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:38:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 42,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üì± Running PWA audit...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:42:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 46,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üîÑ Running runtime audits...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:46:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 58,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üìä Calculating grades...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:58:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 62,
          "column": 5,
          "excerpt": "console.log(chalk.yellow('üìù Generating reports...'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:62:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 66,
          "column": 5,
          "excerpt": "console.log(chalk.green('\\n‚úÖ Audit completed successfully!'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:66:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 67,
          "column": 5,
          "excerpt": "console.log(chalk.blue(`üìä Overall Score: ${grades.overallScore}/100 (${grades.letterGrade})`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:67:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 69,
          "column": 5,
          "excerpt": "console.log(chalk.blue(`üìÅ Reports saved to: ${outputMsg}`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:69:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 73,
          "column": 7,
          "excerpt": "console.log(chalk.red(`‚ùå Score ${grades.overallScore} is below minimum ${options.minScore}`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:73:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 79,
          "column": 7,
          "excerpt": "console.log(chalk.red(`‚ùå ${grades.criticalIssues} critical issues found. Failing audit.`))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:79:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 83,
          "column": 5,
          "excerpt": "console.log(chalk.green('üéâ Audit passed all checks!'))",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:83:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 85,
          "column": 5,
          "excerpt": "console.error(chalk.red('‚ùå Audit failed:'), error.message)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:85:5"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 25,
          "column": 7,
          "excerpt": "async function main() {",
          "suggestion": "",
          "file": "src\\index.js",
          "exactLocation": "src\\index.js:25:7"
        }
      ],
      "score": 0
    },
    "src\\grader.js": {
      "path": "src\\grader.js",
      "issues": [
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 3,
          "column": 8,
          "excerpt": "export function calculateGrades(results) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:3:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 46,
          "column": 1,
          "excerpt": "function calculateCategoryScore(results, category) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:46:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 74,
          "column": 1,
          "excerpt": "function calculateOverallScore(categoryScores) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:74:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 93,
          "column": 1,
          "excerpt": "function getLetterGrade(score) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:93:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 101,
          "column": 8,
          "excerpt": "export function getTopIssues(results, limit = 10) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:101:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 138,
          "column": 8,
          "excerpt": "export function getCategoryBreakdown(results) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:138:8"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 170,
          "column": 8,
          "excerpt": "export function getDetailedCategoryBreakdown(results) {",
          "suggestion": "",
          "file": "src\\grader.js",
          "exactLocation": "src\\grader.js:170:8"
        }
      ],
      "score": 44
    },
    "src\\grade-config.js": {
      "path": "src\\grade-config.js",
      "issues": [],
      "score": 100
    },
    "src\\eslint-runner.js": {
      "path": "src\\eslint-runner.js",
      "issues": [
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 23,
          "column": 7,
          "excerpt": "console.log('‚ö†Ô∏è  No ESLint config found, using default configuration')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:23:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 28,
          "column": 5,
          "excerpt": "console.log('üîÑ Using ESLint CLI for reliable analysis...')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:28:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 31,
          "column": 5,
          "excerpt": "console.warn('‚ö†Ô∏è  ESLint analysis failed:', error.message)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:31:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 64,
          "column": 5,
          "excerpt": "console.log('üîÑ Running: npx eslint src/**/*.{js,jsx,ts,tsx} --format=json')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:64:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 73,
          "column": 5,
          "excerpt": "console.log('‚úÖ ESLint CLI output length:', output.length)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:73:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 75,
          "column": 5,
          "excerpt": "console.log('‚úÖ Parsed results:', results.length, 'files')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:75:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 78,
          "column": 5,
          "excerpt": "console.error('‚ùå ESLint CLI error:', error.message)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:78:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 79,
          "column": 23,
          "excerpt": "if (error.stdout) console.log('stdout:', error.stdout.toString())",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:79:23"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 80,
          "column": 23,
          "excerpt": "if (error.stderr) console.log('stderr:', error.stderr.toString())",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:80:23"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 14,
          "excerpt": "export async function runESLint(projectPath) {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:6:14"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 36,
          "column": 1,
          "excerpt": "function getLineContent(filePath, lineNumber) {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:36:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 46,
          "column": 1,
          "excerpt": "function calculateFileScore(messages) {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:46:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 62,
          "column": 7,
          "excerpt": "async function runESLintCLI(projectPath) {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:62:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 85,
          "column": 1,
          "excerpt": "function processESLintResults(results, projectPath) {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:85:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 135,
          "column": 1,
          "excerpt": "function createDefaultESLintResults() {",
          "suggestion": "",
          "file": "src\\eslint-runner.js",
          "exactLocation": "src\\eslint-runner.js:135:1"
        }
      ],
      "score": 0
    },
    "scripts\\contrast-check.ts": {
      "path": "scripts\\contrast-check.ts",
      "issues": [
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 103,
          "column": 26,
          "excerpt": "{ foreground: '#000000', background: '#ffffff', context: 'Default text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:103:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 103,
          "column": 49,
          "excerpt": "{ foreground: '#000000', background: '#ffffff', context: 'Default text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:103:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 104,
          "column": 26,
          "excerpt": "{ foreground: '#ffffff', background: '#000000', context: 'White text on black' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:104:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 104,
          "column": 49,
          "excerpt": "{ foreground: '#ffffff', background: '#000000', context: 'White text on black' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:104:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 105,
          "column": 26,
          "excerpt": "{ foreground: '#1976d2', background: '#ffffff', context: 'Primary text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:105:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 105,
          "column": 49,
          "excerpt": "{ foreground: '#1976d2', background: '#ffffff', context: 'Primary text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:105:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 106,
          "column": 26,
          "excerpt": "{ foreground: '#ffffff', background: '#1976d2', context: 'White text on primary' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:106:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 106,
          "column": 49,
          "excerpt": "{ foreground: '#ffffff', background: '#1976d2', context: 'White text on primary' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:106:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 107,
          "column": 26,
          "excerpt": "{ foreground: '#d32f2f', background: '#ffffff', context: 'Error text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:107:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 107,
          "column": 49,
          "excerpt": "{ foreground: '#d32f2f', background: '#ffffff', context: 'Error text on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:107:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 108,
          "column": 26,
          "excerpt": "{ foreground: '#ffffff', background: '#d32f2f', context: 'White text on error' }",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:108:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 108,
          "column": 49,
          "excerpt": "{ foreground: '#ffffff', background: '#d32f2f', context: 'White text on error' }",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:108:49"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 119,
          "column": 22,
          "excerpt": "{ foreground: '#000000', background: '#ffffff', context: 'Black on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:119:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 119,
          "column": 45,
          "excerpt": "{ foreground: '#000000', background: '#ffffff', context: 'Black on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:119:45"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 120,
          "column": 22,
          "excerpt": "{ foreground: '#ffffff', background: '#000000', context: 'White on black' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:120:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 120,
          "column": 45,
          "excerpt": "{ foreground: '#ffffff', background: '#000000', context: 'White on black' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:120:45"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 121,
          "column": 22,
          "excerpt": "{ foreground: '#1976d2', background: '#ffffff', context: 'Blue on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:121:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 121,
          "column": 45,
          "excerpt": "{ foreground: '#1976d2', background: '#ffffff', context: 'Blue on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:121:45"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 122,
          "column": 22,
          "excerpt": "{ foreground: '#ffffff', background: '#1976d2', context: 'White on blue' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:122:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 122,
          "column": 45,
          "excerpt": "{ foreground: '#ffffff', background: '#1976d2', context: 'White on blue' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:122:45"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 123,
          "column": 22,
          "excerpt": "{ foreground: '#d32f2f', background: '#ffffff', context: 'Red on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:123:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 123,
          "column": 45,
          "excerpt": "{ foreground: '#d32f2f', background: '#ffffff', context: 'Red on white' },",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:123:45"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 124,
          "column": 22,
          "excerpt": "{ foreground: '#ffffff', background: '#d32f2f', context: 'White on red' }",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:124:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 124,
          "column": 45,
          "excerpt": "{ foreground: '#ffffff', background: '#d32f2f', context: 'White on red' }",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:124:45"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 69,
          "column": 5,
          "excerpt": "console.warn(`Warning: Could not parse colors ${color1} or ${color2}: ${error}`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:69:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 113,
          "column": 5,
          "excerpt": "console.warn(`Warning: Could not read theme file: ${error}`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:113:5"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 186,
          "column": 3,
          "excerpt": "console.log('üé® Checking theme color contrast ratios...')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:186:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 187,
          "column": 3,
          "excerpt": "console.log(`üìÅ Project path: ${projectPath}\\n`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:187:3"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 194,
          "column": 7,
          "excerpt": "console.log('üìä Contrast Ratio Results:\\n')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:194:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 201,
          "column": 9,
          "excerpt": "console.log(`${status} ${result.pair.context}`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:201:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 202,
          "column": 9,
          "excerpt": "console.log(`   ${result.pair.foreground} on ${result.pair.background}`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:202:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 203,
          "column": 9,
          "excerpt": "console.log(`   Ratio: ${result.ratio.toFixed(2)}:1 (Required: ${requirement}:1)`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:203:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 204,
          "column": 9,
          "excerpt": "console.log(`   Size: ${sizeLabel} text`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:204:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 205,
          "column": 9,
          "excerpt": "console.log(`   Standard: WCAG ${result.standard}\\n`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:205:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 214,
          "column": 7,
          "excerpt": "console.log(`üìà Summary: ${passed} passed, ${failed} failed`)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:214:7"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 217,
          "column": 9,
          "excerpt": "console.log('\\n‚ö†Ô∏è  Some color combinations do not meet WCAG AA standards!')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:217:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 218,
          "column": 9,
          "excerpt": "console.log('üí° Consider adjusting colors or using theme.palette tokens.')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:218:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 221,
          "column": 9,
          "excerpt": "console.log('\\nüéâ All color combinations meet WCAG AA standards!')",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:221:9"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 225,
          "column": 7,
          "excerpt": "console.error('‚ùå Error checking contrast:', error.message)",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:225:7"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 27,
          "column": 1,
          "excerpt": "function hexToRgb(hex: string): [number, number, number] {",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:27:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 34,
          "column": 1,
          "excerpt": "function rgbToLuminance(r: number, g: number, b: number): number {",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:34:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 43,
          "column": 1,
          "excerpt": "function calculateContrastRatio(color1: string, color2: string): number {",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:43:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 83,
          "column": 1,
          "excerpt": "function checkContrast(",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:83:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 91,
          "column": 1,
          "excerpt": "function generateColorPairs(themePath: string): ColorPair[] {",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:91:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 131,
          "column": 27,
          "excerpt": "// Main contrast checking function",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:131:27"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 132,
          "column": 14,
          "excerpt": "export async function checkThemeContrast(projectPath: string): Promise<ContrastResult[]> {",
          "suggestion": "",
          "file": "scripts\\contrast-check.ts",
          "exactLocation": "scripts\\contrast-check.ts:132:14"
        },
        {
          "rule": "quality/file-size",
          "category": "quality",
          "severity": "warning",
          "message": "File is too large (231 lines)",
          "line": 1,
          "column": 1,
          "excerpt": "File contains 231 lines",
          "suggestion": "Split large file into smaller, focused modules",
          "file": "scripts\\contrast-check.ts"
        }
      ],
      "score": 0
    },
    "examples\\theme-token-test.jsx": {
      "path": "examples\\theme-token-test.jsx",
      "issues": [
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 16,
          "column": 19,
          "excerpt": "color: '#ff0000', // Should use theme.palette.error.main",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:16:19"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 17,
          "column": 29,
          "excerpt": "backgroundColor: 'rgb(0, 0, 255)', // Should use theme.palette.primary.main",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:17:29"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 18,
          "column": 20,
          "excerpt": "margin: '16px', // Should use theme.spacing(2)",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:18:20"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 19,
          "column": 21,
          "excerpt": "padding: '24px', // Should use theme.spacing(3)",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:19:21"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 20,
          "column": 17,
          "excerpt": "gap: '8px' // Should use theme.spacing(1)",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:20:17"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 29,
          "column": 19,
          "excerpt": "color: '#00ff00', // Should use theme.palette.success.main",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:29:19"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 30,
          "column": 20,
          "excerpt": "border: '2px solid #000000', // Should use theme.palette.common.black",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:30:20"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 30,
          "column": 30,
          "excerpt": "border: '2px solid #000000', // Should use theme.palette.common.black",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:30:30"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 31,
          "column": 26,
          "excerpt": "borderRadius: '4px', // Should use theme.shape.borderRadius",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:31:26"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 32,
          "column": 22,
          "excerpt": "fontSize: '14px' // Should use theme.typography.body2.fontSize",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:32:22"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 67,
          "column": 19,
          "excerpt": "color: '#ff6600', // Should use theme tokens",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:67:19"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 68,
          "column": 20,
          "excerpt": "margin: '20px', // Should use theme spacing",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:68:20"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 69,
          "column": 21,
          "excerpt": "padding: '12px' // Should use theme spacing",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:69:21"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 8,
          "column": 16,
          "excerpt": "export default function ThemeTokenTest() {",
          "suggestion": "",
          "file": "examples\\theme-token-test.jsx",
          "exactLocation": "examples\\theme-token-test.jsx:8:16"
        },
        {
          "rule": "a11y/theme-contrast",
          "category": "accessibility",
          "severity": "warning",
          "message": "Hardcoded colors detected - contrast validation needed",
          "line": 1,
          "column": 1,
          "excerpt": "Hardcoded colors found: #ff0000, rgb(0, 0, 255), #00ff00",
          "suggestion": "Use theme.palette colors and validate contrast ratios meet WCAG AA (4.5:1 for normal text, 3:1 for large text)",
          "file": "examples\\theme-token-test.jsx"
        },
        {
          "rule": "i18n/rtl-support",
          "category": "i18n",
          "severity": "warning",
          "message": "RTL cache not configured for MUI",
          "line": 1,
          "column": 1,
          "excerpt": "No RTL cache configuration found",
          "suggestion": "Add RTL cache: const cacheRtl = createCache({ key: \"mui-rtl\", stylisPlugins: [rtlPlugin] })",
          "file": "examples\\theme-token-test.jsx"
        },
        {
          "rule": "i18n/rtl-support",
          "category": "i18n",
          "severity": "info",
          "message": "Consider adding RTL HTML direction support",
          "line": 1,
          "column": 1,
          "excerpt": "No RTL HTML direction found",
          "suggestion": "Add <Html dir=\"rtl\"> support for RTL locales",
          "file": "examples\\theme-token-test.jsx"
        }
      ],
      "score": 0
    },
    "examples\\ssr-hydration-test.jsx": {
      "path": "examples\\ssr-hydration-test.jsx",
      "issues": [
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 12,
          "column": 22,
          "excerpt": "const serverTime = new Date() // This causes hydration mismatch",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:12:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 13,
          "column": 24,
          "excerpt": "const serverRandom = Math.random() // This causes hydration mismatch",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:13:24"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 14,
          "column": 22,
          "excerpt": "const serverUUID = crypto.randomUUID() // This causes hydration mismatch",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:14:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 15,
          "column": 27,
          "excerpt": "const serverTimestamp = Date.now() // This causes hydration mismatch",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:15:27"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 19,
          "column": 19,
          "excerpt": "setClientTime(new Date())",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:19:19"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 20,
          "column": 21,
          "excerpt": "setClientRandom(Math.random())",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:20:21"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 63,
          "column": 25,
          "excerpt": "const badRandom = Math.floor(Math.random() * 100)",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:63:25"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 64,
          "column": 23,
          "excerpt": "const badDate = new Date()",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:64:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 65,
          "column": 22,
          "excerpt": "const badNow = Date.now()",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:65:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 73,
          "column": 25,
          "excerpt": "// const globalRandom = Math.random()",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:73:25"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 74,
          "column": 23,
          "excerpt": "// const globalTime = new Date()",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:74:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "SSR hydration mismatch detected - non-deterministic values in server-rendered components",
          "line": 75,
          "column": 23,
          "excerpt": "// const globalUUID = crypto.randomUUID()",
          "suggestion": "Use stable values for SSR or move non-deterministic logic to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:75:23"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 13,
          "column": 22,
          "excerpt": "const serverRandom = Math.random() // This causes hydration mismatch",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:13:22"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "crypto.randomUUID() detected - this causes SSR hydration mismatches",
          "line": 14,
          "column": 20,
          "excerpt": "const serverUUID = crypto.randomUUID() // This causes hydration mismatch",
          "suggestion": "Use a stable ID or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:14:20"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 15,
          "column": 25,
          "excerpt": "const serverTimestamp = Date.now() // This causes hydration mismatch",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:15:25"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 20,
          "column": 17,
          "excerpt": "setClientRandom(Math.random())",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:20:17"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.random() detected - this causes SSR hydration mismatches",
          "line": 63,
          "column": 30,
          "excerpt": "const badRandom = Math.floor(Math.random() * 100)",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:63:30"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Math.floor(Math.random()) detected - this causes SSR hydration mismatches",
          "line": 63,
          "column": 19,
          "excerpt": "const badRandom = Math.floor(Math.random() * 100)",
          "suggestion": "Use a stable seed or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:63:19"
        },
        {
          "rule": "nextjs/ssr-hydration-sanity",
          "category": "nextjs",
          "severity": "error",
          "message": "Date.now() detected - this causes SSR hydration mismatches",
          "line": 65,
          "column": 16,
          "excerpt": "const badNow = Date.now()",
          "suggestion": "Use a stable timestamp or move to useEffect for client-side only rendering",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:65:16"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Client hook used inside a Server Component. Add \"use client\" or refactor.",
          "line": 4,
          "column": 1,
          "excerpt": "import React, { useState, useEffect } from 'react'\r",
          "suggestion": "Move client-only logic to a Client Component or add \"use client\" at the top if required",
          "file": "examples\\ssr-hydration-test.jsx"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 7,
          "column": 16,
          "excerpt": "export default function SSRHydrationTest() {",
          "suggestion": "",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:7:16"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 57,
          "column": 19,
          "excerpt": "<Button onClick={() => alert('Client-side only!')}>Client Button</Button>",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:57:19"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 57,
          "column": 19,
          "excerpt": "<Button onClick={() => alert('Client-side only!')}>Client Button</Button>",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "examples\\ssr-hydration-test.jsx",
          "exactLocation": "examples\\ssr-hydration-test.jsx:57:19"
        }
      ],
      "score": 0
    },
    "examples\\import-guards-test.jsx": {
      "path": "examples\\import-guards-test.jsx",
      "issues": [
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 8,
          "column": 1,
          "excerpt": "import * from '@mui/icons-material'",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:8:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 11,
          "column": 1,
          "excerpt": "import Icons from '@mui/icons-material'",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:11:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 14,
          "column": 1,
          "excerpt": "import Icon from '@mui/icons-material'",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:14:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Import guards to prevent bundle bloat - use named imports only",
          "line": 17,
          "column": 1,
          "excerpt": "import _ from 'lodash'",
          "suggestion": "Use named imports for MUI icons and specific imports for lodash functions to reduce bundle size",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:17:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Wildcard import from @mui/icons-material detected - this causes bundle bloat",
          "line": 8,
          "column": 1,
          "excerpt": "import * from '@mui/icons-material'",
          "suggestion": "Use named imports: import { Add, Edit, Delete } from \"@mui/icons-material\"",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:8:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Wildcard import from @mui/icons-material detected - this causes bundle bloat",
          "line": 11,
          "column": 1,
          "excerpt": "import Icons from '@mui/icons-material'",
          "suggestion": "Use named imports: import { Add, Edit, Delete } from \"@mui/icons-material\"",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:11:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Wildcard import from @mui/icons-material detected - this causes bundle bloat",
          "line": 14,
          "column": 1,
          "excerpt": "import Icon from '@mui/icons-material'",
          "suggestion": "Use named imports: import { Add, Edit, Delete } from \"@mui/icons-material\"",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:14:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Default import from lodash detected - this imports the entire library",
          "line": 17,
          "column": 1,
          "excerpt": "import _ from 'lodash'",
          "suggestion": "Use specific imports: import pick from \"lodash/pick\", import debounce from \"lodash/debounce\"",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:17:1"
        },
        {
          "rule": "mui/import-guards",
          "category": "mui",
          "severity": "error",
          "message": "Wildcard import from @mui/icons-material detected - this causes bundle bloat",
          "line": 52,
          "column": 1,
          "excerpt": "// import * as MaterialIcons from '@mui/icons-material'",
          "suggestion": "Use named imports: import { Add, Edit, Delete } from \"@mui/icons-material\"",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:52:1"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 27,
          "column": 16,
          "excerpt": "export default function ImportGuardsTest() {",
          "suggestion": "",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:27:16"
        },
        {
          "rule": "perf/bundle-size",
          "category": "performance",
          "severity": "warning",
          "message": "Large import detected - consider code splitting",
          "line": 17,
          "column": 1,
          "excerpt": "import _ from 'lodash'",
          "suggestion": "Use dynamic imports or tree-shakeable alternatives",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:17:1"
        },
        {
          "rule": "perf/bundle-size",
          "category": "performance",
          "severity": "warning",
          "message": "Large import detected - consider code splitting",
          "line": 53,
          "column": 4,
          "excerpt": "// import { default as Lodash } from 'lodash'",
          "suggestion": "Use dynamic imports or tree-shakeable alternatives",
          "file": "examples\\import-guards-test.jsx",
          "exactLocation": "examples\\import-guards-test.jsx:53:4"
        }
      ],
      "score": 0
    },
    "examples\\sample-project\\pages\\_document.js": {
      "path": "examples\\sample-project\\pages\\_document.js",
      "issues": [
        {
          "rule": "next/font-usage",
          "category": "nextjs",
          "severity": "warning",
          "message": "Use next/font instead of external font links",
          "line": 7,
          "column": 15,
          "excerpt": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />",
          "suggestion": "Use next/font/google for Google Fonts optimization",
          "file": "examples\\sample-project\\pages\\_document.js",
          "exactLocation": "examples\\sample-project\\pages\\_document.js:7:15"
        },
        {
          "rule": "perf/rsc-boundaries",
          "category": "performance",
          "severity": "error",
          "message": "Browser global used in a Server Component. Move to Client Component or dynamic import with ssr: false (last resort).",
          "line": 1,
          "column": 1,
          "excerpt": "import { Html, Head, Main, NextScript } from 'next/document'\r",
          "suggestion": "Isolate browser access behind a client boundary or a server-safe wrapper",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "responsive/viewport-meta",
          "category": "responsive",
          "severity": "error",
          "message": "Missing viewport meta tag",
          "line": 1,
          "column": 1,
          "excerpt": "No viewport meta tag found",
          "suggestion": "Add <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/meta-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing meta tag: description",
          "line": 1,
          "column": 1,
          "excerpt": "No meta name=\"description\" found",
          "suggestion": "Add <meta name=\"description\" content=\"Your description here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/meta-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing meta tag: keywords",
          "line": 1,
          "column": 1,
          "excerpt": "No meta name=\"keywords\" found",
          "suggestion": "Add <meta name=\"keywords\" content=\"Your keywords here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/meta-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing meta tag: author",
          "line": 1,
          "column": 1,
          "excerpt": "No meta name=\"author\" found",
          "suggestion": "Add <meta name=\"author\" content=\"Your author here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/og-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing Open Graph tag: og:title",
          "line": 1,
          "column": 1,
          "excerpt": "No og:title found",
          "suggestion": "Add <meta property=\"og:title\" content=\"Your title here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/og-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing Open Graph tag: og:description",
          "line": 1,
          "column": 1,
          "excerpt": "No og:description found",
          "suggestion": "Add <meta property=\"og:description\" content=\"Your description here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/og-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing Open Graph tag: og:image",
          "line": 1,
          "column": 1,
          "excerpt": "No og:image found",
          "suggestion": "Add <meta property=\"og:image\" content=\"Your image here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/og-tags",
          "category": "seo",
          "severity": "warning",
          "message": "Missing Open Graph tag: og:type",
          "line": 1,
          "column": 1,
          "excerpt": "No og:type found",
          "suggestion": "Add <meta property=\"og:type\" content=\"Your type here\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "seo/title-tag",
          "category": "seo",
          "severity": "error",
          "message": "Missing page title tag",
          "line": 1,
          "column": 1,
          "excerpt": "No <title> tag found",
          "suggestion": "Add <title>Your Page Title</title>",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 3,
          "column": 16,
          "excerpt": "export default function Document() {",
          "suggestion": "",
          "file": "examples\\sample-project\\pages\\_document.js",
          "exactLocation": "examples\\sample-project\\pages\\_document.js:3:16"
        },
        {
          "rule": "pwa/manifest-exists",
          "category": "pwa",
          "severity": "error",
          "message": "PWA manifest.json reference missing",
          "line": 1,
          "column": 1,
          "excerpt": "No manifest.json reference found",
          "suggestion": "Add <link rel=\"manifest\" href=\"/manifest.json\"> to enable PWA functionality",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "pwa/head-tags",
          "category": "pwa",
          "severity": "error",
          "message": "Missing theme-color meta tag",
          "line": 1,
          "column": 1,
          "excerpt": "No theme-color meta tag found",
          "suggestion": "Add <meta name=\"theme-color\" content=\"#your-color\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "pwa/head-tags",
          "category": "pwa",
          "severity": "error",
          "message": "Missing manifest link tag",
          "line": 1,
          "column": 1,
          "excerpt": "No manifest link found",
          "suggestion": "Add <link rel=\"manifest\" href=\"/manifest.json\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "pwa/head-tags",
          "category": "pwa",
          "severity": "warning",
          "message": "Missing apple-touch-icon link",
          "line": 1,
          "column": 1,
          "excerpt": "No apple-touch-icon found",
          "suggestion": "Add <link rel=\"apple-touch-icon\" href=\"/icon-180x180.png\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "pwa/head-tags",
          "category": "pwa",
          "severity": "warning",
          "message": "Missing color-scheme meta tag",
          "line": 1,
          "column": 1,
          "excerpt": "No color-scheme meta tag found",
          "suggestion": "Add <meta name=\"color-scheme\" content=\"light dark\">",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "mui/ssr-setup",
          "category": "mui",
          "severity": "error",
          "message": "MUI Emotion SSR not configured",
          "line": 1,
          "column": 1,
          "excerpt": "No createEmotionServer found",
          "suggestion": "Set up createEmotionServer and extractCriticalToChunks for SSR",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "mui/ssr-setup",
          "category": "mui",
          "severity": "error",
          "message": "CssBaseline not injected",
          "line": 1,
          "column": 1,
          "excerpt": "No CssBaseline found",
          "suggestion": "Add CssBaseline to prevent FOUC and ensure consistent styling",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "mui/ssr-setup",
          "category": "mui",
          "severity": "error",
          "message": "ThemeProvider not found at app root",
          "line": 1,
          "column": 1,
          "excerpt": "No ThemeProvider found",
          "suggestion": "Wrap app with ThemeProvider for consistent theming",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "mui/font-strategy",
          "category": "mui",
          "severity": "error",
          "message": "Google Fonts blocking CSS without preload",
          "line": 1,
          "column": 1,
          "excerpt": "Google Fonts link without preload",
          "suggestion": "Use next/font or add rel=\"preload\" with display=\"swap\"",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "mui/font-strategy",
          "category": "mui",
          "severity": "warning",
          "message": "Font strategy not optimized",
          "line": 1,
          "column": 1,
          "excerpt": "No optimized font loading found",
          "suggestion": "Use next/font or implement font preloading to prevent CLS",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "i18n/rtl-support",
          "category": "i18n",
          "severity": "warning",
          "message": "RTL cache not configured for MUI",
          "line": 1,
          "column": 1,
          "excerpt": "No RTL cache configuration found",
          "suggestion": "Add RTL cache: const cacheRtl = createCache({ key: \"mui-rtl\", stylisPlugins: [rtlPlugin] })",
          "file": "examples\\sample-project\\pages\\_document.js"
        },
        {
          "rule": "i18n/rtl-support",
          "category": "i18n",
          "severity": "info",
          "message": "Consider adding RTL HTML direction support",
          "line": 1,
          "column": 1,
          "excerpt": "No RTL HTML direction found",
          "suggestion": "Add <Html dir=\"rtl\"> support for RTL locales",
          "file": "examples\\sample-project\\pages\\_document.js"
        }
      ],
      "score": 0
    },
    "examples\\sample-project\\components\\Header.jsx": {
      "path": "examples\\sample-project\\components\\Header.jsx",
      "issues": [
        {
          "rule": "next/head-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Metadata API instead of next/head",
          "line": 3,
          "column": 1,
          "excerpt": "import Head from 'next/head'",
          "suggestion": "Replace with Metadata API: export const metadata = { title: \"...\" }",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:3:1"
        },
        {
          "rule": "next/image-usage",
          "category": "nextjs",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 19,
          "column": 11,
          "excerpt": "<img src=\"/logo.png\" alt=\"\" />",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:19:11"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 11,
          "column": 60,
          "excerpt": "<AppBar position=\"static\" style={{ backgroundColor: '#1976d2' }}>",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:11:60"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded color '#1976d2' found. Use theme.palette.* token instead.",
          "line": 11,
          "column": 60,
          "excerpt": "<AppBar position=\"static\" style={{ backgroundColor: '#1976d2' }}>",
          "suggestion": "Replace with theme.palette.primary.main, theme.palette.error.main, etc.",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:11:60"
        },
        {
          "rule": "a11y/missing-alt",
          "category": "accessibility",
          "severity": "error",
          "message": "Image missing alt attribute",
          "line": 19,
          "column": 11,
          "excerpt": "<img src=\"/logo.png\" alt=\"\" />",
          "suggestion": "Add alt attribute for screen reader accessibility",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:19:11"
        },
        {
          "rule": "quality/console-usage",
          "category": "quality",
          "severity": "warning",
          "message": "Console statement in production code",
          "line": 16,
          "column": 50,
          "excerpt": "<Button color=\"inherit\" onClick={() => console.log('Login clicked')}>",
          "suggestion": "Remove console statements or use proper logging library",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:16:50"
        },
        {
          "rule": "image/png-icons",
          "category": "image",
          "severity": "warning",
          "message": "PNG icon should be converted to SVG",
          "line": 19,
          "column": 11,
          "excerpt": "<img src=\"/logo.png\" alt=\"\" />",
          "suggestion": "Convert /logo.png to SVG format for better scalability and smaller file size",
          "file": "examples\\sample-project\\components\\Header.jsx"
        },
        {
          "rule": "image/next-image",
          "category": "image",
          "severity": "error",
          "message": "Use Next.js Image component instead of img tag",
          "line": 19,
          "column": 11,
          "excerpt": "<img src=\"/logo.png\" alt=\"\" />",
          "suggestion": "Import and use <Image> from next/image for optimization",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:19:11"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 5,
          "column": 1,
          "excerpt": "const Header = () => {",
          "suggestion": "",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:5:1"
        },
        {
          "rule": "a11y/keyboard-navigation",
          "category": "accessibility",
          "severity": "warning",
          "message": "Interactive element missing keyboard support",
          "line": 16,
          "column": 35,
          "excerpt": "<Button color=\"inherit\" onClick={() => console.log('Login clicked')}>",
          "suggestion": "Add keyboard event handlers and tabIndex for accessibility",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:16:35"
        },
        {
          "rule": "a11y/keyboard-interaction",
          "category": "accessibility",
          "severity": "error",
          "message": "Interactive elements must be keyboard accessible",
          "line": 16,
          "column": 35,
          "excerpt": "<Button color=\"inherit\" onClick={() => console.log('Login clicked')}>",
          "suggestion": "Add keyboard event handlers or make element keyboard accessible",
          "file": "examples\\sample-project\\components\\Header.jsx",
          "exactLocation": "examples\\sample-project\\components\\Header.jsx:16:35"
        }
      ],
      "score": 0
    },
    "examples\\sample-project\\components\\Dashboard.jsx": {
      "path": "examples\\sample-project\\components\\Dashboard.jsx",
      "issues": [
        {
          "rule": "next/client-directive",
          "category": "nextjs",
          "severity": "warning",
          "message": "Unnecessary \"use client\" directive detected",
          "line": 1,
          "column": 1,
          "excerpt": "\"use client\"",
          "suggestion": "Remove \"use client\" if component doesn't need client-side features",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:1:1"
        },
        {
          "rule": "mui/responsive-design",
          "category": "mui",
          "severity": "warning",
          "message": "Grid component without responsive breakpoints",
          "line": 22,
          "column": 7,
          "excerpt": "<Grid container spacing={2}>",
          "suggestion": "Add responsive props like xs={12} md={6} for mobile-first design",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:22:7"
        },
        {
          "rule": "mui/responsive-design",
          "category": "mui",
          "severity": "warning",
          "message": "Grid component without responsive breakpoints",
          "line": 23,
          "column": 9,
          "excerpt": "<Grid item>",
          "suggestion": "Add responsive props like xs={12} md={6} for mobile-first design",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:23:9"
        },
        {
          "rule": "mui/responsive-design",
          "category": "mui",
          "severity": "warning",
          "message": "Grid component without responsive breakpoints",
          "line": 32,
          "column": 9,
          "excerpt": "<Grid item>",
          "suggestion": "Add responsive props like xs={12} md={6} for mobile-first design",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:32:9"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 24,
          "column": 34,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:34"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded colors and spacing detected - use theme tokens instead",
          "line": 24,
          "column": 51,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Replace hardcoded colors with theme.palette.* and spacing with theme.spacing() or sx scale",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:51"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded spacing '300px' found. Use theme.spacing() or sx scale instead.",
          "line": 24,
          "column": 34,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Replace with theme.spacing(2), theme.spacing(3), or sx={{ m: 2, p: 3 }}",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:34"
        },
        {
          "rule": "mui/theme-token-enforcement",
          "category": "mui",
          "severity": "warning",
          "message": "Hardcoded spacing '200px' found. Use theme.spacing() or sx scale instead.",
          "line": 24,
          "column": 51,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Replace with theme.spacing(2), theme.spacing(3), or sx={{ m: 2, p: 3 }}",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:51"
        },
        {
          "rule": "perf/client-heavy",
          "category": "performance",
          "severity": "warning",
          "message": "Too many client components may impact performance",
          "line": 1,
          "column": 1,
          "excerpt": "\"use client\"",
          "suggestion": "",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:1:1"
        },
        {
          "rule": "security/no-secrets",
          "category": "security",
          "severity": "error",
          "message": "Potential secret/credential detected",
          "line": 8,
          "column": 9,
          "excerpt": "const apiKey = \"sk-1234567890abcdef1234567890abcdef1234567890abcdef\"",
          "suggestion": "Use environment variables instead of hardcoded secrets",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:8:9"
        },
        {
          "rule": "security/dangerous-html",
          "category": "security",
          "severity": "error",
          "message": "dangerouslySetInnerHTML usage detected",
          "line": 36,
          "column": 20,
          "excerpt": "<div dangerouslySetInnerHTML={{ __html: '<svg>...</svg>' }} />",
          "suggestion": "Sanitize HTML content or use React components instead",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:36:20"
        },
        {
          "rule": "security/external-links",
          "category": "security",
          "severity": "info",
          "message": "External link missing security attributes",
          "line": 44,
          "column": 43,
          "excerpt": "<a href=\"https://external-site.com\" target=\"_blank\">External Link</a>",
          "suggestion": "Add rel=\"noopener noreferrer\" for security",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:44:43"
        },
        {
          "rule": "responsive/fixed-dimensions",
          "category": "responsive",
          "severity": "warning",
          "message": "Fixed pixel dimensions may cause responsive issues",
          "line": 24,
          "column": 26,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Use relative units (%, rem, vw) or responsive breakpoints",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:26"
        },
        {
          "rule": "responsive/fixed-dimensions",
          "category": "responsive",
          "severity": "warning",
          "message": "Fixed pixel dimensions may cause responsive issues",
          "line": 24,
          "column": 42,
          "excerpt": "<Card style={{ width: '300px', height: '200px' }}>",
          "suggestion": "Use relative units (%, rem, vw) or responsive breakpoints",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:24:42"
        },
        {
          "rule": "quality/function-complexity",
          "category": "quality",
          "severity": "warning",
          "message": "Function is too complex (high cyclomatic complexity)",
          "line": 6,
          "column": 1,
          "excerpt": "const Dashboard = () => {",
          "suggestion": "",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:6:1"
        },
        {
          "rule": "a11y/blank-target-security",
          "category": "accessibility",
          "severity": "error",
          "message": "target=\"_blank\" without rel=\"noopener\" is a security vulnerability",
          "line": 44,
          "column": 43,
          "excerpt": "<a href=\"https://external-site.com\" target=\"_blank\">External Link</a>",
          "suggestion": "Add rel=\"noopener noreferrer\" for security when using target=\"_blank\"",
          "file": "examples\\sample-project\\components\\Dashboard.jsx",
          "exactLocation": "examples\\sample-project\\components\\Dashboard.jsx:44:43"
        }
      ],
      "score": 0
    },
    "public/": {
      "path": "public/",
      "issues": [
        {
          "rule": "structure/public-folder-organization",
          "category": "structure",
          "severity": "error",
          "message": "Public folder is missing",
          "line": 1,
          "column": 1,
          "excerpt": "No public folder found",
          "suggestion": "Create a public folder for static assets",
          "file": "public/",
          "exactLocation": "public/:1:1"
        }
      ],
      "score": 85
    }
  },
  "manualChecks": {
    "responsive": [],
    "accessibility": [],
    "performance": [],
    "notes": []
  }
}