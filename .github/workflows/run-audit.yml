name: Dev-Mhany Audit

on:
  repository_dispatch:
    types: [dev-mhany-audit]
  workflow_dispatch:
    inputs:
      audit_config:
        description: 'Audit configuration (JSON)'
        required: false
        default: '{}'
      user_email:
        description: 'User email for notifications'
        required: false

permissions:
  contents: write
  pull-requests: write
  checks: write

concurrency:
  group: audit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    runs-on: ubuntu-latest
    name: Next.js + MUI Audit
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref || github.ref }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache audit dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: audit-${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            audit-${{ runner.os }}-npm-
            
      - name: Install dependencies
        run: |
          npm ci --production=false
          
      - name: Install audit toolkit
        run: |
          npm install -g nextjs-mui-audit-toolkit@latest
          
      - name: Prepare audit config
        run: |
          echo '${{ github.event.client_payload.audit_config || github.event.inputs.audit_config || "{}" }}' > .audit-config.json
          cat .audit-config.json
          
      - name: Run audit (static only for security)
        id: audit
        run: |
          npx nextjs-mui-audit run \
            --output ./audit \
            --min-score 85 \
            --strict \
            --no-runtime \
            --ci
        continue-on-error: true
        env:
          AUDIT_CONFIG_FILE: .audit-config.json
          
      - name: Create audit branch
        id: branch
        run: |
          BRANCH=chore/audit-$(date +%Y%m%d-%H%M%S)
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b $BRANCH
          git add audit/
          git -c user.name="dev-mhany[bot]" \
              -c user.email="audit@users.noreply.github.com" \
              commit -m "audited by dev-mhany: add audit reports

          🔍 Automated audit results
          - HTML report: audit/report.html  
          - JSON data: audit/report.json
          - Summary: audit/REPORT.md
          - Fixes: audit/FIX_REPORT.md
          
          Generated by dev-mhany audit toolkit"
          git push origin $BRANCH
          
      - name: Create/Update PR
        id: pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "🔍 Audit: Next.js + MUI (automated)"
          body: |
            ## 🔍 Automated Audit by dev-mhany
            
            This PR contains automated audit results for your Next.js + Material-UI project.
            
            ### 📊 Reports Generated
            - **HTML Report**: [`audit/report.html`](./audit/report.html) - Interactive detailed report
            - **JSON Data**: [`audit/report.json`](./audit/report.json) - Machine-readable results  
            - **Summary**: [`audit/REPORT.md`](./audit/REPORT.md) - Overall grade and key metrics
            - **Fix Guide**: [`audit/FIX_REPORT.md`](./audit/FIX_REPORT.md) - Recommended fixes
            
            ### 🔒 Security Notice
            - Static analysis only (no code execution)
            - Reports committed to audit branch (not main)
            - Compatible with branch protection rules
            
            ### 🎯 Next Steps
            1. Review the audit reports
            2. Apply recommended fixes
            3. Merge when satisfied with results
            
            ---
            
            **Audit Status**: ${{ steps.audit.outcome == 'success' && '✅ Passed' || '❌ Issues Found' }}
            
            **Triggered by**: ${{ github.event.client_payload.triggered_by || 'Manual' }}
            
            <sub>🤖 Generated by [dev-mhany audit toolkit](https://github.com/dev-mhany/nextjs-mui-audit-toolkit)</sub>
          branch: ${{ steps.branch.outputs.branch }}
          labels: |
            audit
            automated
            dev-mhany
          draft: false
          
      - name: Add PR comment with summary
        if: steps.pr.outputs.pull-request-number
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.pr.outputs.pull-request-number }}
          body: |
            ## 📊 Audit Summary
            
            | Metric | Value |
            |--------|-------|
            | Overall Grade | See `audit/REPORT.md` |
            | Status | ${{ steps.audit.outcome == 'success' && '✅ Passed' || '❌ Needs Attention' }} |
            | Reports | [`audit/`](./audit/) directory |
            | Execution | Static analysis only (secure) |
            
            **View detailed results**: [`audit/report.html`](./audit/report.html)
            
      - name: Create check run summary
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "dev-mhany audit summary"
          conclusion: ${{ steps.audit.outcome == 'success' && 'success' || 'failure' }}
          output: |
            {
              "title": "Next.js + MUI Audit Complete",
              "summary": "Audit completed. See PR #${{ steps.pr.outputs.pull-request-number }} for detailed results.",
              "text": "Reports available in the audit/ directory:\n- audit/report.html (interactive)\n- audit/report.json (data)\n- audit/REPORT.md (summary)\n- audit/FIX_REPORT.md (fixes)"
            }
            
      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-results-${{ github.run_id }}
          path: audit/
          retention-days: 30
          
      - name: Notify completion via email
        if: always() && (github.event.client_payload.user_email || github.event.inputs.user_email)
        run: |
          echo "📧 Email notification would be sent to: ${{ github.event.client_payload.user_email || github.event.inputs.user_email }}"
          echo "🔍 Audit completed for ${{ github.repository }}"
          echo "📋 Status: ${{ steps.audit.outcome }}"
          echo "📎 PR: ${{ steps.pr.outputs.pull-request-url }}"
          # Email integration would be implemented here
          
      - name: Set workflow outputs
        if: always()
        run: |
          echo "audit-status=${{ steps.audit.outcome }}" >> $GITHUB_OUTPUT
          echo "pr-url=${{ steps.pr.outputs.pull-request-url }}" >> $GITHUB_OUTPUT
          echo "pr-number=${{ steps.pr.outputs.pull-request-number }}" >> $GITHUB_OUTPUT