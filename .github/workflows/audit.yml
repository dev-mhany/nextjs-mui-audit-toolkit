name: Next.js + MUI Audit

on:
  pull_request:
    branches: [main, develop, master]
  push:
    branches: [main, develop, master]
  workflow_dispatch:

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run audit
        run: |
          npm run audit -- --strict --min-score 85
          echo "AUDIT_EXIT_CODE=$?" >> $GITHUB_ENV
        continue-on-error: true

      - name: Upload audit reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-reports-${{ github.run_number }}
          path: |
            audit/
            report.json
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'audit', 'REPORT.md');
              if (fs.existsSync(reportPath)) {
                const report = fs.readFileSync(reportPath, 'utf-8');
                
                // Extract summary
                const summaryMatch = report.match(/\*\*Overall Score:\*\* (\d+)\/100 \(([A-F])\)/);
                const score = summaryMatch ? summaryMatch[1] : 'Unknown';
                const grade = summaryMatch ? summaryMatch[2] : 'Unknown';
                
                const criticalMatch = report.match(/\*\*Critical Issues:\*\* (\d+)/);
                const critical = criticalMatch ? criticalMatch[1] : '0';
                
                let status = '‚úÖ';
                let message = 'Audit passed!';
                
                if (parseInt(score) < 85) {
                  status = '‚ùå';
                  message = 'Audit failed - Score below 85';
                } else if (parseInt(critical) > 0) {
                  status = '‚ùå';
                  message = 'Audit failed - Critical issues found';
                }
                
                const timestamp = new Date().toISOString();
                
                const comment = `## ${status} Next.js + MUI Audit Results
                
                **Overall Score:** ${score}/100 (${grade})
                **Critical Issues:** ${critical}
                **Status:** ${message}
                **Run Time:** ${timestamp}
                
                üìä [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
                üìÅ [Download Reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)
                
                ${parseInt(critical) > 0 ? '‚ö†Ô∏è **This PR cannot be merged until critical issues are resolved.**' : ''}
                
                <details>
                <summary>üìã Quick Summary</summary>
                
                \`\`\`
                ${report.split('\n').slice(0, 20).join('\n')}...
                \`\`\`
                
                </details>
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.error('Failed to comment PR:', error);
            }

      - name: Fail if audit failed
        if: env.AUDIT_EXIT_CODE != '0'
        run: |
          echo "Audit failed with exit code $AUDIT_EXIT_CODE"
          exit 1
